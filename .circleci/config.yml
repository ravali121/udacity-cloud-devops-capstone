version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.2.1
  aws-eks: circleci/aws-eks@1.0.3
  kubernetes: circleci/kubernetes@0.4.0


jobs:
  build:
    docker:
      - image: 'circleci/node:13.8.0'
    steps:
      - checkout
      - run:
          command: echo "Building weather-app"
          working_directory: weather-app
      - run:
          command: npm --version
          working_directory: weather-app
      - run:
          command: node --version
          working_directory: weather-app

  lint:
    docker:
      - image: 'circleci/node:13.8.0'
    steps:
      - checkout
      - run:
          command: npm install
          working_directory: weather-app
      - run:
          command: echo "Linting weather-app"
          working_directory: weather-app
      - run:
          command: npm run lint
          working_directory: weather-app


  build-and-push-docker-image:
    docker:
      - image: 'circleci/node:13.8.0'
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Building docker image
          command: docker build -t weather-app .
      - run:
          name: Push docker image
          command: |
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASS"
            docker tag weather-app:latest ravali121/weather-app
            docker push ravali121/weather-app

  deploy-to-aws-eks:
    docker:
      - image: 'amazon/aws-cli'
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: weather-app
          aws-region: us-west-2
          install-kubectl: true
          verbose: true
      - run:
          name: "deploy docker image"
          command: |
            kubectl --version
            kubectl config use-context arn:aws:eks:us-west-2:468045334408:cluster/weather-app
            kubectl apply -f deployment/namespace.yml
            kubectl apply -f deployment/deployment.yml
            kubectl apply -f deployment/service.yml
            kubectl set image deployment weather-app weather-app=ravali121/weather-app
            kubectl rollout status deployment weather-app
            kubectl get nodes
            kubectl get deployments
            kubectl get pod -o wide
            kubectl get services

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - lint:
          requires:
            - build
      - build-and-push-docker-image:
          requires:
            - lint
      - deploy-to-aws-eks:
          requires:
            - build-and-push-docker-image
